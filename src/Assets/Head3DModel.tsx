/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useRef } from "react";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
 nodes: {
  Cube_1: THREE.Mesh;
  Cube_2: THREE.Mesh;
  Cube_3: THREE.Mesh;
  Sphere: THREE.Mesh;
  Sphere001: THREE.Mesh;
  Cube001: THREE.Mesh;
  Cube002: THREE.Mesh;
  Cube003: THREE.Mesh;
  Cylinder: THREE.Mesh;
 };
 materials: {
  hair: THREE.MeshStandardMaterial;
  skin: THREE.MeshStandardMaterial;
  ["Material.003"]: THREE.MeshStandardMaterial;
  ["Material.001"]: THREE.MeshStandardMaterial;
  tounge: THREE.MeshStandardMaterial;
  ["Material.002"]: THREE.MeshStandardMaterial;
  Material: THREE.MeshStandardMaterial;
 };
};

export default function Head3DModel(props: JSX.IntrinsicElements["group"]) {
 const group = useRef<THREE.Group>();
 const { nodes, materials } = useGLTF("/Head3D.gltf") as GLTFResult;

 useFrame(() => {
  if (group.current)
   group.current.rotation.y = group.current.rotation.y += 0.01;
 });
 return (
  <group ref={group} {...props} dispose={null}>
   <group scale={[0.12, 0.12, 0.12]}>
    <mesh material={materials.hair} geometry={nodes.Cube_1.geometry} />
    <mesh material={materials.skin} geometry={nodes.Cube_2.geometry} />
    <mesh
     material={materials["Material.003"]}
     geometry={nodes.Cube_3.geometry}
    />
   </group>
   <mesh
    material={materials["Material.001"]}
    geometry={nodes.Sphere.geometry}
    position={[0.08, 0.02, -0.03]}
    scale={[0.01, 0.01, 0.01]}
   />
   <mesh
    material={materials.tounge}
    geometry={nodes.Sphere001.geometry}
    position={[0.06, -0.02, 0]}
    scale={[0.02, 0.01, 0.02]}
   />
   <mesh
    material={materials["Material.002"]}
    geometry={nodes.Cube001.geometry}
    position={[0.07, 0, 0]}
    rotation={[0, 0, -0.04]}
    scale={[0, 0, -0.03]}
   />
   <mesh
    material={materials["Material.002"]}
    geometry={nodes.Cube002.geometry}
    position={[0.07, -0.02, 0]}
    rotation={[0, 0, -0.04]}
    scale={[0, 0, -0.02]}
   />
   <mesh
    material={materials.Material}
    geometry={nodes.Cube003.geometry}
    position={[0.13, 0.02, 0]}
    scale={[-0.02, -0.02, -0.02]}
   />
   <mesh
    material={materials.skin}
    geometry={nodes.Cylinder.geometry}
    position={[0.01, 0, -0.08]}
    rotation={[0, 0.28, -1.41]}
    scale={[0.03, 0.01, 0.02]}
   />
  </group>
 );
}

useGLTF.preload("/Head3D.gltf");
